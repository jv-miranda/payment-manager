generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int            @id @default(autoincrement())
  email          String         @unique(map: "unique_email") @db.VarChar(255)
  password       String         @db.VarChar(255)
  name           String         @db.VarChar(100)
  bills          Bills[]
  cash_registers CashRegister[]
  clients        Client[]
  vendors        Vendor[]

  @@map("users")
}

model Vendor {
  id           Int            @id @default(autoincrement())
  telephone    String?        @unique(map: "unique_telephone_vendors") @db.VarChar(20)
  cpf          String         @unique @db.VarChar(20)
  name         String         @db.VarChar(255)
  belongs_to   String?
  CashRegister CashRegister[]
  Client       Client[]
  users        User?          @relation(fields: [belongs_to], references: [email], onUpdate: NoAction, map: "fk_vendors_user_email")

  @@map("vendors")
}

model Client {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  cpf          String         @unique @db.VarChar(14)
  vendor_id    Int?
  notes        String?
  telephone    String?        @unique(map: "unique_telephone_clients") @db.VarChar(20)
  cep          String?        @db.VarChar(10)
  address      String?
  created_at   DateTime?      @default(dbgenerated("timezone('America/Sao_Paulo'::text, CURRENT_TIMESTAMP)")) @db.Timestamptz(6)
  belongs_to   String?
  Bills        Bills[]
  CashRegister CashRegister[]
  vendor       Vendor?        @relation(fields: [vendor_id], references: [id], onUpdate: NoAction)
  users        User?          @relation(fields: [belongs_to], references: [email], onUpdate: NoAction, map: "fk_clients_user_email")

  @@map("clients")
}

model Bills {
  id             Int            @id @default(autoincrement())
  client_id      Int?
  notes          String?
  status         String         @db.VarChar(10)
  payment_method String         @db.VarChar(10)
  scheduled_date DateTime       @db.Date
  value          Decimal        @db.Decimal(10, 2)
  created_at     DateTime?      @default(dbgenerated("timezone('America/Sao_Paulo'::text, CURRENT_TIMESTAMP)")) @db.Timestamptz(6)
  belongs_to     String?
  client         Client?        @relation(fields: [client_id], references: [id], onUpdate: NoAction)
  users          User?          @relation(fields: [belongs_to], references: [email], onUpdate: NoAction, map: "fk_bills_user_email")
  CashRegister   CashRegister[]

  @@map("bills")
}

model CashRegister {
  id               Int       @id @default(autoincrement())
  client_id        Int?
  vendor_id        Int?
  bill_id          Int?
  date             DateTime? @default(now()) @db.Timestamp(6)
  bill_value       Decimal   @db.Decimal(10, 2)
  vendor_day_costs Decimal   @db.Decimal(10, 2)
  belongs_to       String?
  bill             Bills?    @relation(fields: [bill_id], references: [id], onUpdate: NoAction)
  client           Client?   @relation(fields: [client_id], references: [id], onUpdate: NoAction)
  vendor           Vendor?   @relation(fields: [vendor_id], references: [id], onUpdate: NoAction)
  users            User?     @relation(fields: [belongs_to], references: [email], onUpdate: NoAction, map: "fk_cash_registers_user_email")

  @@map("cash_registers")
}
